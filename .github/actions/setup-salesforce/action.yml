# ==============================================================================
# Composite Action: Setup Salesforce Environment
# ==============================================================================
# This action consolidates all setup steps for Salesforce CLI with caching
# to improve performance and simplify workflow management.
#
# What it does:
# 1. Sets up Node.js with npm caching
# 2. Caches Salesforce CLI installation
# 3. Installs Salesforce CLI (only if not cached)
# 4. Caches npm global packages
# 5. Verifies installation
#
# Usage:
#   - uses: ./.github/actions/setup-salesforce
#
# ==============================================================================

name: 'Setup Salesforce Environment'
description: 'Sets up Node.js and Salesforce CLI with comprehensive caching'

# No inputs needed - uses environment variables from workflow
inputs:
  node-version:
    description: 'Node.js version to use'
    required: false
    default: '18'

  sf-cli-version:
    description: 'Salesforce CLI version'
    required: false
    default: 'latest'

# Outputs for debugging and conditional logic
outputs:
  cache-hit:
    description: 'Whether Salesforce CLI was restored from cache'
    value: ${{ steps.cache-sf-cli.outputs.cache-hit }}

  sf-version:
    description: 'Installed Salesforce CLI version'
    value: ${{ steps.get-version.outputs.version }}

runs:
  using: 'composite'
  steps:
    # ==========================================================================
    # STEP 1: Setup Node.js with npm caching
    # ==========================================================================
    - name: 🔧 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ inputs.node-version }}
        # Cache npm packages for faster installations
        cache: 'npm'
        cache-dependency-path: '**/package.json'

    # ==========================================================================
    # STEP 2: Cache npm global packages directory
    # ==========================================================================
    # This caches the global npm packages directory where Salesforce CLI is installed
    # Much faster than reinstalling from npm registry
    - name: 💾 Cache npm Global Packages
      id: cache-npm-global
      uses: actions/cache@v3
      with:
        path: |
          ~/.npm
          /usr/local/lib/node_modules
          /usr/local/bin/sf
        key: npm-global-${{ runner.os }}-node${{ inputs.node-version }}-${{ inputs.sf-cli-version }}-${{ hashFiles('**/package.json') }}
        restore-keys: |
          npm-global-${{ runner.os }}-node${{ inputs.node-version }}-${{ inputs.sf-cli-version }}-
          npm-global-${{ runner.os }}-node${{ inputs.node-version }}-
          npm-global-${{ runner.os }}-

    # ==========================================================================
    # STEP 3: Cache Salesforce CLI configuration and plugins
    # ==========================================================================
    # This caches the Salesforce CLI configuration, plugins, and data
    - name: 💾 Cache Salesforce CLI
      id: cache-sf-cli
      uses: actions/cache@v3
      with:
        path: |
          ~/.sf
          ~/.config/sf
          ~/.local/share/sf
        key: sf-cli-${{ runner.os }}-${{ inputs.sf-cli-version }}-${{ hashFiles('**/package.json') }}
        restore-keys: |
          sf-cli-${{ runner.os }}-${{ inputs.sf-cli-version }}-
          sf-cli-${{ runner.os }}-

    # ==========================================================================
    # STEP 4: Install Salesforce CLI (only if not cached)
    # ==========================================================================
    - name: 📦 Install Salesforce CLI
      # Only install if the global packages cache missed
      if: steps.cache-npm-global.outputs.cache-hit != 'true'
      shell: bash
      run: |
        echo "=== Installing Salesforce CLI ==="
        echo "📊 Cache status: MISS - Installing from npm"
        echo "📦 Version: ${{ inputs.sf-cli-version }}"

        # Install Salesforce CLI globally
        # --force flag ensures clean installation
        # --loglevel=error reduces noise in logs
        npm install -g @salesforce/cli@${{ inputs.sf-cli-version }} --force --loglevel=error

        echo "✅ Salesforce CLI installed successfully"

    # ==========================================================================
    # STEP 5: Display cache hit information
    # ==========================================================================
    - name: ℹ️  Cache Hit Information
      if: steps.cache-npm-global.outputs.cache-hit == 'true'
      shell: bash
      run: |
        echo "=== Salesforce CLI Cache ==="
        echo "📊 Cache status: HIT ⚡"
        echo "✅ Restored from cache - no installation needed!"
        echo "⏱️  Time saved: ~90 seconds"

    # ==========================================================================
    # STEP 6: Verify Salesforce CLI installation
    # ==========================================================================
    - name: ✓ Verify Salesforce CLI
      shell: bash
      run: |
        echo "=== Verifying Salesforce CLI Installation ==="

        # Check if sf command exists
        if ! command -v sf &> /dev/null; then
          echo "❌ ERROR: sf command not found!"
          echo "Installation may have failed."
          exit 1
        fi

        # Get and display version
        SF_VERSION=$(sf --version 2>&1 | head -n 1)
        echo "✅ Salesforce CLI is ready"
        echo "📦 Version: $SF_VERSION"

        # Display installation location
        SF_PATH=$(which sf)
        echo "📍 Location: $SF_PATH"

        # Display plugins (optional, helps with debugging)
        echo ""
        echo "🔌 Installed plugins:"
        sf plugins --core 2>/dev/null || echo "  (No additional plugins)"

    # ==========================================================================
    # STEP 7: Get version for output
    # ==========================================================================
    - name: 📋 Get SF Version
      id: get-version
      shell: bash
      run: |
        VERSION=$(sf --version 2>&1 | head -n 1)
        echo "version=$VERSION" >> $GITHUB_OUTPUT

# ==============================================================================
# Performance Notes:
# ==============================================================================
#
# First Run (Cold Cache):
#   - Setup Node.js: ~5s
#   - Cache miss: ~0s
#   - Install SF CLI: ~90s
#   - Verify: ~2s
#   Total: ~97s
#
# Subsequent Runs (Warm Cache):
#   - Setup Node.js: ~5s (npm cache hit)
#   - Cache restore: ~3s ⚡
#   - Skip install: ~0s ⚡
#   - Verify: ~2s
#   Total: ~10s
#
# Time Saved: ~87 seconds per run!
#
# ==============================================================================
